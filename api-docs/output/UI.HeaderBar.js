Ext.data.JsonP.UI_HeaderBar({"tagname":"class","name":"UI.HeaderBar","autodetected":{},"files":[{"filename":"analysis.js","href":null}],"members":[{"name":"alpha","tagname":"property","owner":"UI.HeaderBar","id":"property-alpha","meta":{"android":true,"ios":true}},{"name":"attributedSubtitle","tagname":"property","owner":"UI.HeaderBar","id":"property-attributedSubtitle","meta":{"android":true}},{"name":"attributedTitle","tagname":"property","owner":"UI.HeaderBar","id":"property-attributedTitle","meta":{"android":true}},{"name":"backBarButtonItem","tagname":"property","owner":"UI.HeaderBar","id":"property-backBarButtonItem","meta":{"ios":true}},{"name":"backgroundColor","tagname":"property","owner":"UI.HeaderBar","id":"property-backgroundColor","meta":{"android":true,"ios":true}},{"name":"backgroundImage","tagname":"property","owner":"UI.HeaderBar","id":"property-backgroundImage","meta":{"android":true,"ios":true}},{"name":"borderVisibility","tagname":"property","owner":"UI.HeaderBar","id":"property-borderVisibility","meta":{"android":true,"ios":true}},{"name":"contentInset","tagname":"property","owner":"UI.HeaderBar","id":"property-contentInset","meta":{"android":true}},{"name":"elevation","tagname":"property","owner":"UI.HeaderBar","id":"property-elevation","meta":{"android":true}},{"name":"height","tagname":"property","owner":"UI.HeaderBar","id":"property-height","meta":{"readonly":true,"android":true,"ios":true}},{"name":"itemColor","tagname":"property","owner":"UI.HeaderBar","id":"property-itemColor","meta":{"android":true,"ios":true}},{"name":"largeTitleDisplayMode","tagname":"property","owner":"UI.HeaderBar","id":"property-largeTitleDisplayMode","meta":{"ios":true}},{"name":"leftItemEnabled","tagname":"property","owner":"UI.HeaderBar","id":"property-leftItemEnabled","meta":{"android":true,"ios":true}},{"name":"logo","tagname":"property","owner":"UI.HeaderBar","id":"property-logo","meta":{"android":true}},{"name":"logoEnabled","tagname":"property","owner":"UI.HeaderBar","id":"property-logoEnabled","meta":{"android":true}},{"name":"subtitle","tagname":"property","owner":"UI.HeaderBar","id":"property-subtitle","meta":{"android":true}},{"name":"subtitleFont","tagname":"property","owner":"UI.HeaderBar","id":"property-subtitleFont","meta":{"android":true}},{"name":"title","tagname":"property","owner":"UI.HeaderBar","id":"property-title","meta":{"android":true,"ios":true}},{"name":"titleColor","tagname":"property","owner":"UI.HeaderBar","id":"property-titleColor","meta":{"android":true,"ios":true}},{"name":"titleFont","tagname":"property","owner":"UI.HeaderBar","id":"property-titleFont","meta":{"ios":true}},{"name":"titleLayout","tagname":"property","owner":"UI.HeaderBar","id":"property-titleLayout","meta":{"android":true,"ios":true}},{"name":"translucent","tagname":"property","owner":"UI.HeaderBar","id":"property-translucent","meta":{"ios":true}},{"name":"transparent","tagname":"property","owner":"UI.HeaderBar","id":"property-transparent","meta":{"android":true,"ios":true}},{"name":"visible","tagname":"property","owner":"UI.HeaderBar","id":"property-visible","meta":{"android":true,"ios":true}},{"name":"setItems","tagname":"method","owner":"UI.HeaderBar","id":"method-setItems","meta":{}},{"name":"setLeftItem","tagname":"method","owner":"UI.HeaderBar","id":"method-setLeftItem","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-UI.HeaderBar","short_doc":"HeaderBar class represents Navigation Bar for iOS and Action Bar for Android. ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='doc-contents'><p>HeaderBar class represents Navigation Bar for iOS and Action Bar for Android. It is a bar\nshown on top of page under statusBar object. You can manage application navigation by setting\nbuttons and you can show title of page on HeaderBar.</p>\n\n<p>Creating instance of HeaderBar class is not valid. You can access header bar of page\nvia <a href=\"#!/api/UI.Page-property-headerBar\" rel=\"UI.Page-property-headerBar\" class=\"docClass\">UI.Page.headerBar</a> property. Some properties should change from parentController of page for iOS.</p>\n\n<p>On iOS you should work with header bar in scope of onLoad and onShow callbacks, otherwise\nbehaviour is undefined.</p>\n\n<p>If the HeaderBar is visible, the pages starts under the HeaderBar, otherwise you should check\nbehaviour of the <a href=\"#!/api/UI.StatusBar\" rel=\"UI.StatusBar\" class=\"docClass\">UI.StatusBar</a>.</p>\n\n<pre class='inline-example '><code>const Page = require('sf-core/ui/page');\nconst Color = require('sf-core/ui/color');\nconst HeaderBarItem = require('sf-core/ui/headerbaritem');\n\nvar myPage = new Page({\n    onLoad: function() {\n        var page = this;\n        var headerBar = System.OS === \"Android\" ? page.headerBar : page.parentController.headerBar;\n        headerBar.backgroundColor = Color.MAGENTA;\n        page.headerBar.title = \"Header Bar\";\n\n        var myItem = new HeaderBarItem({\n            title: \"Done\",\n            onPress: function() {\n                <a href=\"#!/api/console-static-method-log\" rel=\"console-static-method-log\" class=\"docClass\">console.log</a>(\"You pressed Done item!\");\n            }\n        });\n        this.headerBar.setItems([myItem]);\n    },\n    onShow: function() {\n        var page = this;\n        var headerBar = System.OS === \"Android\" ? page.headerBar : page.parentController.headerBar;\n        headerBar.visible = true;\n    }\n});\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-alpha' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-alpha' class='name expandable'>alpha</a> : Number<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Defines the opacity of a view. ...</div><div class='long'><p>Defines the opacity of a view. The value of this property is a float number between 0.0 and 1.0. For iOS, you should access this property from page.parentController.\n0 represents view is completely transparent and 1 represents view is completely opaque.</p>\n<p>Defaults to: <code>1</code></p>        <p>Available since: <b>4.0.0</b></p>\n</div></div></div><div id='property-attributedSubtitle' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-attributedSubtitle' class='name expandable'>attributedSubtitle</a> : UI.AttributedString<span class=\"signature\"><span class='android' >android</span></span></div><div class='description'><div class='short'><p>Gets/sets attributed subtitle of the header bar.</p>\n</div><div class='long'><p>Gets/sets attributed subtitle of the header bar.</p>\n        <p>Available since: <b>4.0.0</b></p>\n</div></div></div><div id='property-attributedTitle' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-attributedTitle' class='name expandable'>attributedTitle</a> : UI.AttributedString<span class=\"signature\"><span class='android' >android</span></span></div><div class='description'><div class='short'><p>Gets/sets attributed title of the header bar.</p>\n</div><div class='long'><p>Gets/sets attributed title of the header bar.</p>\n        <p>Available since: <b>4.0.0</b></p>\n</div></div></div><div id='property-backBarButtonItem' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-backBarButtonItem' class='name expandable'>backBarButtonItem</a> : HeaderBarItem<span class=\"signature\"><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets/sets backBarButtonItem of the header bar. ...</div><div class='long'><p>Gets/sets backBarButtonItem of the header bar.\nWhen it set, it will change the next page's back button appearance.\nThis change can be observed only on the pages that added to navigator style router.\nDefault value is undefined, it gets title value from previous page's header bar title property.\nSetting onPress callback of HeaderBarItem will not effect backBarButtonItem's onPress behaviour.\nThis property will work only for iOS.</p>\n\n<pre class='inline-example '><code>const HeaderBarItem = require('sf-core/ui/headerbaritem');\nconst Page = require('sf-core/ui/page');\n\nvar myPage = new Page();\nvar backBarButtonItem = new HeaderBarItem({\n     title : \"Back\"\n});\nmyPage.headerBar.ios.backBarButtonItem = backBarButtonItem;\n</code></pre>\n        <p>Available since: <b>0.1</b></p>\n</div></div></div><div id='property-backgroundColor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-backgroundColor' class='name expandable'>backgroundColor</a> : <a href=\"#!/api/UI.Color\" rel=\"UI.Color\" class=\"docClass\">UI.Color</a><span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets/sets background color of the header bar. ...</div><div class='long'><p>Gets/sets background color of the header bar. If not set, header bar will have default\nbackground color depending on device's OS and OS version. For iOS, you should access this property from page.parentController.</p>\n\n<pre class='inline-example '><code>const Page = require('sf-core/ui/page');\nconst Color = require('sf-core/ui/color');\nvar myPage = new Page({\n    onLoad: function() {\n        var page = this;\n        var headerBar = System.OS === \"Android\" ? page.headerBar : page.parentController.headerBar;\n        headerBar.backgroundColor = Color.RED;\n    }\n});\n</code></pre>\n<p>Defaults to: <code>Color.create(&quot;#00A1F1&quot;)</code></p>        <p>Available since: <b>0.1</b></p>\n</div></div></div><div id='property-backgroundImage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-backgroundImage' class='name expandable'>backgroundImage</a> : <a href=\"#!/api/UI.Image\" rel=\"UI.Image\" class=\"docClass\">UI.Image</a><span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets/sets background image of the HeaderBar. ...</div><div class='long'><p>Gets/sets background image of the HeaderBar. For iOS, you should access this property from page.parentController.</p>\n\n<pre class='inline-example '><code>const Page = require('sf-core/ui/page');\nconst Image = require('sf-core/ui/image');\nvar myPage = new Page({\n    onLoad: function() {\n        var page = this;\n        var headerBar = System.OS === \"Android\" ? page.headerBar : page.parentController.headerBar;\n        headerBar.backgroundImage = Image.createFromFile('images://smartface.png');\n    }\n});\n</code></pre>\n<p>Defaults to: <code>null</code></p>        <p>Available since: <b>0.1</b></p>\n</div></div></div><div id='property-borderVisibility' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-borderVisibility' class='name expandable'>borderVisibility</a> : Boolean<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets/sets border visibility of headerbar. ...</div><div class='long'><p>Gets/sets border visibility of headerbar. For iOS, you should access this property from page.parentController.</p>\n<p>Defaults to: <code>true</code></p>        <p>Available since: <b>3.0.3</b></p>\n</div></div></div><div id='property-contentInset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-contentInset' class='name expandable'>contentInset</a> : Object<span class=\"signature\"><span class='android' >android</span></span></div><div class='description'><div class='short'>Gets/sets the content inset of headerbar. ...</div><div class='long'><p>Gets/sets the content inset of headerbar. Minimum API Level 21 required. The content inset affects the valid area for Headerbar content other than\nthe navigation button and menu. Insets define the minimum margin for these custom views like <a href=\"#!/api/UI.HeaderBar-property-titleLayout\" rel=\"UI.HeaderBar-property-titleLayout\" class=\"docClass\">titleLayout</a>  and\ncan be used to effectively align HeaderBar content along well-known gridlines.</p>\n<p>Defaults to: <code>{}</code></p>        <p>Available since: <b>3.2.1</b></p>\n<ul><li><span class='pre'>left</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>right</span> : Number<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='property-elevation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-elevation' class='name expandable'>elevation</a> : Number<span class=\"signature\"><span class='android' >android</span></span></div><div class='description'><div class='short'>Gets/sets elevation of the header bar. ...</div><div class='long'><p>Gets/sets elevation of the header bar.</p>\n\n<pre class='inline-example '><code>const Page = require('sf-core/ui/page');\nvar myPage = new Page();\nmyPage.headerBar.android.elevation = 10;\n</code></pre>\n        <p>Available since: <b>3.2.2</b></p>\n</div></div></div><div id='property-height' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-height' class='name expandable'>height</a> : Number<span class=\"signature\"><span class='readonly' >readonly</span><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets the height of the header bar. ...</div><div class='long'><p>Gets the height of the header bar. Height is a read only property and\nits value may change depending on device and screen density. For iOS, you should access this property from page.parentController.</p>\n        <p>Available since: <b>0.1</b></p>\n</div></div></div><div id='property-itemColor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-itemColor' class='name expandable'>itemColor</a> : <a href=\"#!/api/UI.Color\" rel=\"UI.Color\" class=\"docClass\">UI.Color</a><span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets/sets item color of the header bar. ...</div><div class='long'><p>Gets/sets item color of the header bar. This property will change color of the left item and color of all header bar items. For iOS, you should access this property from page.parentController.</p>\n\n<pre class='inline-example '><code>const Page = require('sf-core/ui/page');\nconst Color = require('sf-core/ui/color');\nvar myPage = new Page({\n    onLoad: function() {\n        var page = this;\n        var headerBar = System.OS === \"Android\" ? page.headerBar : page.parentController.headerBar;\n        headerBar.itemColor = Color.BLUE;\n    }\n});\n</code></pre>\n<p>Defaults to: <code>Color.WHITE</code></p>        <p>Available since: <b>0.1</b></p>\n</div></div></div><div id='property-largeTitleDisplayMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-largeTitleDisplayMode' class='name expandable'>largeTitleDisplayMode</a> : Page.iOS.LargeTitleDisplayMode<span class=\"signature\"><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets/sets the mode to use how to display title of header bar. ...</div><div class='long'><p>Gets/sets the mode to use how to display title of header bar.\nThis property will work only for iOS.\nIf \"prefersLargeTitles\" property of navigator is false, this property has no effect and title will display as small title.</p>\n\n<pre class='inline-example '><code>const Page = require('sf-core/ui/page');\nvar myPage = new Page();\nmyPage.headerBar.ios.largeTitleDisplayMode = Page.iOS.LargeTitleDisplayMode.ALWAYS;\n</code></pre>\n        <p>Available since: <b>0.1</b></p>\n</div></div></div><div id='property-leftItemEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-leftItemEnabled' class='name expandable'>leftItemEnabled</a> : Boolean<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets/sets the navigation indicator visibility of the headerBar. ...</div><div class='long'><p>Gets/sets the navigation indicator visibility of the headerBar.\nIf false navigation indicator will not show, otherwise will show\nas back icon if left item not set.</p>\n<p>Defaults to: <code>false</code></p>        <p>Available since: <b>0.1</b></p>\n</div></div></div><div id='property-logo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-logo' class='name expandable'>logo</a> : <a href=\"#!/api/UI.Image\" rel=\"UI.Image\" class=\"docClass\">UI.Image</a><span class=\"signature\"><span class='android' >android</span></span></div><div class='description'><div class='short'>Gets/sets the logo of the HeaderBar image which will shown left\nside of the left item. ...</div><div class='long'><p>Gets/sets the logo of the HeaderBar image which will shown left\nside of the left item. You should enable the logo with logoEnabled.\nIf log is not set, the logo image will not shown.\nThis property will work only for Android.</p>\n\n<pre class='inline-example '><code>const Page = require('sf-core/ui/page');\nconst Image = require('sf-core/ui/image');\nvar myPage = new Page();\nvar myImage = Image.createFromFile('images://icon.png');\nmyPage.headerBar.android.logoEnabled = true;\nmyPage.headerBar.android.logo = myImage;\n</code></pre>\n<p>Defaults to: <code>null</code></p>        <p>Available since: <b>0.1</b></p>\n</div></div></div><div id='property-logoEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-logoEnabled' class='name expandable'>logoEnabled</a> : Boolean<span class=\"signature\"><span class='android' >android</span></span></div><div class='description'><div class='short'>Gets/sets the logo visibility of the HeaderBar. ...</div><div class='long'><p>Gets/sets the logo visibility of the HeaderBar. If logo is disable,\nlogo image will newer shown. This property will work only for Android.</p>\n<p>Defaults to: <code>false</code></p>        <p>Available since: <b>0.1</b></p>\n</div></div></div><div id='property-subtitle' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-subtitle' class='name expandable'>subtitle</a> : String<span class=\"signature\"><span class='android' >android</span></span></div><div class='description'><div class='short'>Gets/sets subtitle of the header bar. ...</div><div class='long'><p>Gets/sets subtitle of the header bar. If not set subtitle will not show.\nThis property will work only for Android.</p>\n\n<pre class='inline-example '><code>const Page = require('sf-core/ui/page');\nvar myPage = new Page();\nmyPage.headerBar.android.subtitle = 'Hello from HeaderBar Subtitle!';\n</code></pre>\n<p>Defaults to: <code>&#39;&#39;</code></p>        <p>Available since: <b>0.1</b></p>\n</div></div></div><div id='property-subtitleFont' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-subtitleFont' class='name expandable'>subtitleFont</a> : <a href=\"#!/api/UI.Font\" rel=\"UI.Font\" class=\"docClass\">UI.Font</a><span class=\"signature\"><span class='android' >android</span></span></div><div class='description'><div class='short'><p>Gets/sets titleFont of header bar subtitle.</p>\n</div><div class='long'><p>Gets/sets titleFont of header bar subtitle.</p>\n        <p>Available since: <b>4.0.0</b></p>\n</div></div></div><div id='property-title' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-title' class='name expandable'>title</a> : String<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets/sets title of the header bar. ...</div><div class='long'><p>Gets/sets title of the header bar.</p>\n<p>Defaults to: <code>&#39;&#39;</code></p>        <p>Available since: <b>0.1</b></p>\n</div></div></div><div id='property-titleColor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-titleColor' class='name expandable'>titleColor</a> : <a href=\"#!/api/UI.Color\" rel=\"UI.Color\" class=\"docClass\">UI.Color</a><span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets/sets title color of the header bar. ...</div><div class='long'><p>Gets/sets title color of the header bar. For iOS, you should access this property from page.parentController.</p>\n<p>Defaults to: <code>Color.BLACK</code></p>        <p>Available since: <b>0.1</b></p>\n</div></div></div><div id='property-titleFont' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-titleFont' class='name expandable'>titleFont</a> : <a href=\"#!/api/UI.Font\" rel=\"UI.Font\" class=\"docClass\">UI.Font</a><span class=\"signature\"><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets/sets titleFont of header bar title. ...</div><div class='long'><p>Gets/sets titleFont of header bar title. You should access this property from page.parentController.</p>\n\n<pre class='inline-example '><code>const Page = require('sf-core/ui/page');\nconst Font = require(\"sf-core/ui/font\");\nvar myPage = new Page({\n    onLoad: function() {\n        this.parentController.headerBar.ios.titleFont = Font.create(Font.DEFAULT, 10);\n    }\n});\n</code></pre>\n        <p>Available since: <b>4.0.0</b></p>\n</div></div></div><div id='property-titleLayout' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-titleLayout' class='name expandable'>titleLayout</a> : <a href=\"#!/api/UI.View\" rel=\"UI.View\" class=\"docClass\">UI.View</a><span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets/sets the title layout of the HeaderBar. ...</div><div class='long'><p>Gets/sets the title layout of the HeaderBar. Title layout allows you to assign custom view.\nFor iOS, layouts are centered on the header bar and may be resized to fit.</p>\n        <p>Available since: <b>3.2.1</b></p>\n</div></div></div><div id='property-translucent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-translucent' class='name expandable'>translucent</a> : Boolean<span class=\"signature\"><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>A Boolean value that indicates whether the header bar is translucent. ...</div><div class='long'><p>A Boolean value that indicates whether the header bar is translucent. For iOS, you should access this property from page.parentController.</p>\n<p>Defaults to: <code>false</code></p>        <p>Available since: <b>4.0.2</b></p>\n</div></div></div><div id='property-transparent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-transparent' class='name expandable'>transparent</a> : Boolean<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets/sets transparency of header bar. ...</div><div class='long'><p>Gets/sets transparency of header bar. For iOS, you should access this property from page.parentController.</p>\n<p>Defaults to: <code>true</code></p>        <p>Available since: <b>4.0.0</b></p>\n</div></div></div><div id='property-visible' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-property-visible' class='name expandable'>visible</a> : boolean<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets/sets visibility of the header bar. ...</div><div class='long'><p>Gets/sets visibility of the header bar. For iOS, you should access this property from page.parentController.</p>\n<p>Defaults to: <code>true</code></p>        <p>Available since: <b>0.1</b></p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-setItems' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-method-setItems' class='name expandable'>setItems</a>( <span class='pre'>items</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This function allows you to set header bar items to the right of page's headerBar. ...</div><div class='long'><p>This function allows you to set header bar items to the right of page's headerBar.\nGiven items should be instance of <a href=\"#!/api/UI.HeaderBarItem\" rel=\"UI.HeaderBarItem\" class=\"docClass\">UI.HeaderBarItem</a> class. Items will be\nadded to header bar in given array order starting from right of header bar.</p>\n        <p>Available since: <b>0.1</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>items</span> : Array&lt;UI.HeaderBarItem&gt;<div class='sub-desc'><p>Array of HeaderBarItem objects to add</p>\n</div></li></ul></div></div></div><div id='method-setLeftItem' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.HeaderBar'>UI.HeaderBar</span><br/></div><a href='#!/api/UI.HeaderBar-method-setLeftItem' class='name expandable'>setLeftItem</a>( <span class='pre'>item</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets left item of header bar to given item. ...</div><div class='long'><p>Sets left item of header bar to given item.</p>\n\n<pre class='inline-example '><code>const Page = require('sf-core/ui/page');\n const HeaderBarItem = require('sf-core/ui/headerbaritem');\n var myPage = new Page();\n myPage.onLoad = function(e){\n     var leftItem = new HeaderBarItem();\n     leftItem.title = \"Left Item\";\n     myPage.headerBar.setLeftItem(leftItem);\n }\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : <a href=\"#!/api/UI.HeaderBarItem\" rel=\"UI.HeaderBarItem\" class=\"docClass\">UI.HeaderBarItem</a><div class='sub-desc'><p>HeaderBarItem to add.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});