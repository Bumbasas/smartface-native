Ext.data.JsonP.UI_AlertView_ButtonType({"tagname":"class","name":"UI.AlertView.ButtonType","autodetected":{},"files":[{"filename":"analysis.js","href":null}],"enum":{"type":"Number","default":null,"doc_only":null},"since":"0.1","deprecated":{"text":"<p>Use <a href=\"#!/api/UI.AlertView.Android.ButtonType\" rel=\"UI.AlertView.Android.ButtonType\" class=\"docClass\">UI.AlertView.Android.ButtonType</a> instead.</p>\n\n<p>ButtonType is used to indicate the behaviors of buttons in <a href=\"#!/api/UI.AlertView\" rel=\"UI.AlertView\" class=\"docClass\">UI.AlertView</a>.\nYou can specify a button have negative, positive or neutral user experience.\nAccording to operating system button appearance or positions may change.</p>\n\n<pre class='inline-example '><code>const AlertView = require('sf-core/ui/alertview');\n\nvar myAlertView = new AlertView({\n    title: \"Alert Title\",\n    message: \"Alert Message\"\n});\nmyAlertView.addButton({\n    index: AlertView.ButtonType.NEUTRAL,\n    text: \"Ignore\",\n});\nmyAlertView.addButton({\n    index: AlertView.ButtonType.NEGATIVE,\n    text: \"Cancel\"\n});\nmyAlertView.addButton({\n    index: AlertView.ButtonType.POSITIVE,\n    text: \"Okay\"\n});\n\nmyAlertView.show();\n</code></pre>\n","version":"1.1.10"},"members":[{"name":"NEGATIVE","tagname":"property","owner":"UI.AlertView.ButtonType","id":"static-property-NEGATIVE","meta":{"readonly":true,"static":true,"android":true}},{"name":"NEUTRAL","tagname":"property","owner":"UI.AlertView.ButtonType","id":"static-property-NEUTRAL","meta":{"readonly":true,"static":true,"android":true}},{"name":"POSITIVE","tagname":"property","owner":"UI.AlertView.ButtonType","id":"static-property-POSITIVE","meta":{"readonly":true,"static":true,"android":true}}],"alternateClassNames":[],"aliases":{},"id":"class-UI.AlertView.ButtonType","short_doc":" ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='doc-contents'>\n        <p>Available since: <b>0.1</b></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This class has been <strong>deprected</strong> since 1.1.10</p>\n        <p>Use <a href=\"#!/api/UI.AlertView.Android.ButtonType\" rel=\"UI.AlertView.Android.ButtonType\" class=\"docClass\">UI.AlertView.Android.ButtonType</a> instead.</p>\n\n<p>ButtonType is used to indicate the behaviors of buttons in <a href=\"#!/api/UI.AlertView\" rel=\"UI.AlertView\" class=\"docClass\">UI.AlertView</a>.\nYou can specify a button have negative, positive or neutral user experience.\nAccording to operating system button appearance or positions may change.</p>\n\n<pre class='inline-example '><code>const AlertView = require('sf-core/ui/alertview');\n\nvar myAlertView = new AlertView({\n    title: \"Alert Title\",\n    message: \"Alert Message\"\n});\nmyAlertView.addButton({\n    index: AlertView.ButtonType.NEUTRAL,\n    text: \"Ignore\",\n});\nmyAlertView.addButton({\n    index: AlertView.ButtonType.NEGATIVE,\n    text: \"Cancel\"\n});\nmyAlertView.addButton({\n    index: AlertView.ButtonType.POSITIVE,\n    text: \"Okay\"\n});\n\nmyAlertView.show();\n</code></pre>\n\n        </div>\n<div class='rounded-box enum-box'><p><strong>ENUM:</strong> This enumeration defines a set of Number values.</p></div></div><div class='members'><div class='members-section'><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static properties</h3><div id='static-property-NEGATIVE' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.AlertView.ButtonType'>UI.AlertView.ButtonType</span><br/></div><a href='#!/api/UI.AlertView.ButtonType-static-property-NEGATIVE' class='name expandable'>NEGATIVE</a> : Number<span class=\"signature\"><span class='readonly' >readonly</span><span class='static' >static</span><span class='android' >android</span></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n        <p>Available since: <b>0.1</b></p>\n</div></div></div><div id='static-property-NEUTRAL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.AlertView.ButtonType'>UI.AlertView.ButtonType</span><br/></div><a href='#!/api/UI.AlertView.ButtonType-static-property-NEUTRAL' class='name expandable'>NEUTRAL</a> : Number<span class=\"signature\"><span class='readonly' >readonly</span><span class='static' >static</span><span class='android' >android</span></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n        <p>Available since: <b>0.1</b></p>\n</div></div></div><div id='static-property-POSITIVE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.AlertView.ButtonType'>UI.AlertView.ButtonType</span><br/></div><a href='#!/api/UI.AlertView.ButtonType-static-property-POSITIVE' class='name expandable'>POSITIVE</a> : Number<span class=\"signature\"><span class='readonly' >readonly</span><span class='static' >static</span><span class='android' >android</span></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n        <p>Available since: <b>0.1</b></p>\n</div></div></div></div></div></div></div>","meta":{"deprecated":{"text":"<p>Use <a href=\"#!/api/UI.AlertView.Android.ButtonType\" rel=\"UI.AlertView.Android.ButtonType\" class=\"docClass\">UI.AlertView.Android.ButtonType</a> instead.</p>\n\n<p>ButtonType is used to indicate the behaviors of buttons in <a href=\"#!/api/UI.AlertView\" rel=\"UI.AlertView\" class=\"docClass\">UI.AlertView</a>.\nYou can specify a button have negative, positive or neutral user experience.\nAccording to operating system button appearance or positions may change.</p>\n\n<pre class='inline-example '><code>const AlertView = require('sf-core/ui/alertview');\n\nvar myAlertView = new AlertView({\n    title: \"Alert Title\",\n    message: \"Alert Message\"\n});\nmyAlertView.addButton({\n    index: AlertView.ButtonType.NEUTRAL,\n    text: \"Ignore\",\n});\nmyAlertView.addButton({\n    index: AlertView.ButtonType.NEGATIVE,\n    text: \"Cancel\"\n});\nmyAlertView.addButton({\n    index: AlertView.ButtonType.POSITIVE,\n    text: \"Okay\"\n});\n\nmyAlertView.show();\n</code></pre>\n","version":"1.1.10"}}});