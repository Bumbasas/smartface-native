Ext.data.JsonP.AsyncTask({"tagname":"class","name":"AsyncTask","autodetected":{},"files":[{"filename":"analysis.js","href":null}],"since":"3.1.0","members":[{"name":"cancel","tagname":"property","owner":"AsyncTask","id":"property-cancel","meta":{"android":true,"ios":true}},{"name":"getStatus","tagname":"method","owner":"AsyncTask","id":"method-getStatus","meta":{"android":true}},{"name":"onCancelled","tagname":"method","owner":"AsyncTask","id":"method-onCancelled","meta":{"android":true,"ios":true}},{"name":"onPreExecute","tagname":"method","owner":"AsyncTask","id":"method-onPreExecute","meta":{"android":true}},{"name":"run","tagname":"method","owner":"AsyncTask","id":"method-run","meta":{"android":true,"ios":true}},{"name":"onComplete","tagname":"event","owner":"AsyncTask","id":"event-onComplete","meta":{"android":true,"ios":true}},{"name":"task","tagname":"event","owner":"AsyncTask","id":"event-task","meta":{"android":true,"ios":true}}],"alternateClassNames":[],"aliases":{},"id":"class-AsyncTask","short_doc":"AsyncTask enables proper and easy use of concurrency to improve speed and performance. ...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='doc-contents'><p>AsyncTask enables proper and easy use of concurrency to improve speed and performance.</p>\n\n<pre class='inline-example '><code>const AsyncTask = require(\"sf-core/asynctask\");\nvar asynctask = new AsyncTask();\nasynctask.task = function () {\n    // do something\n};\nasynctask.onComplete = function () {\n    <a href=\"#!/api/console-static-method-log\" rel=\"console-static-method-log\" class=\"docClass\">console.log</a>(\"AsyncTask is completed.\");\n};\n\nasynctask.run();\n</code></pre>\n        <p>Available since: <b>3.1.0</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-cancel' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='AsyncTask'>AsyncTask</span><br/></div><a href='#!/api/AsyncTask-property-cancel' class='name expandable'>cancel</a> : Function<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Attempts to cancel execution of this task. ...</div><div class='long'><p>Attempts to cancel execution of this task. For Android, This attempt will fail if the task has already completed,\nalready been cancelled, or could not be cancelled for some other reason. For Android, If successful,\nand this task has not started when cancel is called, this task should never run. If the task has already started,\nthen the mayInterruptIfRunning parameter determines whether the thread executing this task should be interrupted in an attempt to stop the task.</p>\n        <p>Available since: <b>3.2.2</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>false For Android, if the task could not be cancelled, typically because it has already completed normally; true otherwise.</p>\n</div></li></ul></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getStatus' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='AsyncTask'>AsyncTask</span><br/></div><a href='#!/api/AsyncTask-method-getStatus' class='name expandable'>getStatus</a>( <span class='pre'></span> ) : <a href=\"#!/api/AsyncTask.Android.Status\" rel=\"AsyncTask.Android.Status\" class=\"docClass\">AsyncTask.Android.Status</a><span class=\"signature\"><span class='android' >android</span></span></div><div class='description'><div class='short'>Returns the current status of this task. ...</div><div class='long'><p>Returns the current status of this task.</p>\n        <p>Available since: <b>3.2.2</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/AsyncTask.Android.Status\" rel=\"AsyncTask.Android.Status\" class=\"docClass\">AsyncTask.Android.Status</a></span><div class='sub-desc'><p>status</p>\n</div></li></ul></div></div></div><div id='method-onCancelled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='AsyncTask'>AsyncTask</span><br/></div><a href='#!/api/AsyncTask-method-onCancelled' class='name expandable'>onCancelled</a>( <span class='pre'></span> )<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Runs on the UI thread after cancel() is invoked ...</div><div class='long'><p>Runs on the UI thread after cancel() is invoked</p>\n        <p>Available since: <b>3.2.2</b></p>\n</div></div></div><div id='method-onPreExecute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='AsyncTask'>AsyncTask</span><br/></div><a href='#!/api/AsyncTask-method-onPreExecute' class='name expandable'>onPreExecute</a>( <span class='pre'></span> )<span class=\"signature\"><span class='android' >android</span></span></div><div class='description'><div class='short'>Runs on the UI thread before onComplete. ...</div><div class='long'><p>Runs on the UI thread before onComplete.</p>\n        <p>Available since: <b>3.2.2</b></p>\n</div></div></div><div id='method-run' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='AsyncTask'>AsyncTask</span><br/></div><a href='#!/api/AsyncTask-method-run' class='name expandable'>run</a>( <span class='pre'></span> )<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Runs the task. ...</div><div class='long'><p>Runs the task.</p>\n        <p>Available since: <b>3.1.0</b></p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-event'>Events</h3><div class='subsection'><div id='event-onComplete' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='AsyncTask'>AsyncTask</span><br/></div><a href='#!/api/AsyncTask-event-onComplete' class='name expandable'>onComplete</a>( <span class='pre'></span> )<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>This event invokes when task is completed. ...</div><div class='long'><p>This event invokes when task is completed.</p>\n        <p>Available since: <b>3.1.0</b></p>\n</div></div></div><div id='event-task' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='AsyncTask'>AsyncTask</span><br/></div><a href='#!/api/AsyncTask-event-task' class='name expandable'>task</a>( <span class='pre'></span> )<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>This event describes task of AsyncTask instance. ...</div><div class='long'><p>This event describes task of AsyncTask instance.</p>\n        <p>Available since: <b>3.1.0</b></p>\n</div></div></div></div></div></div></div>","meta":{}});