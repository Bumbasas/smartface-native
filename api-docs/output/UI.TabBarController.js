Ext.data.JsonP.UI_TabBarController({"tagname":"class","name":"UI.TabBarController","autodetected":{},"files":[{"filename":"analysis.js","href":null}],"extends":"UI.Page","since":"3.2.0","members":[{"name":"autoCapitalize","tagname":"property","owner":"UI.TabBarController","id":"property-autoCapitalize","meta":{"android":true,"ios":true}},{"name":"barColor","tagname":"property","owner":"UI.TabBarController","id":"property-barColor","meta":{"android":true,"ios":true}},{"name":"barHeight","tagname":"property","owner":"UI.TabBarController","id":"property-barHeight","meta":{"android":true,"ios":true}},{"name":"dividerColor","tagname":"property","owner":"UI.TabBarController","id":"property-dividerColor","meta":{"android":true}},{"name":"dividerPadding","tagname":"property","owner":"UI.TabBarController","id":"property-dividerPadding","meta":{"android":true}},{"name":"dividerWidth","tagname":"property","owner":"UI.TabBarController","id":"property-dividerWidth","meta":{"android":true}},{"name":"headerBar","tagname":"property","owner":"UI.Page","id":"property-headerBar","meta":{"readonly":true,"android":true,"ios":true}},{"name":"indicatorColor","tagname":"property","owner":"UI.TabBarController","id":"property-indicatorColor","meta":{"android":true,"ios":true}},{"name":"indicatorHeight","tagname":"property","owner":"UI.TabBarController","id":"property-indicatorHeight","meta":{"android":true,"ios":true}},{"name":"items","tagname":"property","owner":"UI.TabBarController","id":"property-items","meta":{"android":true,"ios":true}},{"name":"layout","tagname":"property","owner":"UI.Page","id":"property-layout","meta":{"readonly":true,"android":true,"ios":true}},{"name":"orientation","tagname":"property","owner":"UI.Page","id":"property-orientation","meta":{"android":true,"ios":true}},{"name":"overScrollMode","tagname":"property","owner":"UI.TabBarController","id":"property-overScrollMode","meta":{"android":true}},{"name":"safeAreaLayoutMode","tagname":"property","owner":"UI.Page","id":"property-safeAreaLayoutMode","meta":{"ios":true}},{"name":"scrollEnabled","tagname":"property","owner":"UI.TabBarController","id":"property-scrollEnabled","meta":{"android":true,"ios":true}},{"name":"selectedIndex","tagname":"property","owner":"UI.TabBarController","id":"property-selectedIndex","meta":{"android":true,"ios":true}},{"name":"statusBar","tagname":"property","owner":"UI.Page","id":"property-statusBar","meta":{"readonly":true,"removed":{"text":"<p>Use Application.statusBar instead</p>\n","version":"4.0.0"},"android":true,"ios":true}},{"name":"textColor","tagname":"property","owner":"UI.TabBarController","id":"property-textColor","meta":{"android":true,"ios":true}},{"name":"transitionViews","tagname":"property","owner":"UI.Page","id":"property-transitionViews","meta":{"readonly":true,"android":true,"ios":true}},{"name":"transitionViewsCallback","tagname":"property","owner":"UI.Page","id":"property-transitionViewsCallback","meta":{"android":true}},{"name":"dismiss","tagname":"method","owner":"UI.Page","id":"method-dismiss","meta":{"deprecated":{"text":"\n"},"android":true,"ios":true}},{"name":"present","tagname":"method","owner":"UI.Page","id":"method-present","meta":{"deprecated":{"text":"\n"},"android":true,"ios":true}},{"name":"setSelectedIndex","tagname":"method","owner":"UI.TabBarController","id":"method-setSelectedIndex","meta":{"android":true,"ios":true}},{"name":"onBackButtonPressed","tagname":"event","owner":"UI.Page","id":"event-onBackButtonPressed","meta":{"android":true}},{"name":"onHide","tagname":"event","owner":"UI.Page","id":"event-onHide","meta":{"android":true,"ios":true}},{"name":"onLoad","tagname":"event","owner":"UI.Page","id":"event-onLoad","meta":{"android":true,"ios":true}},{"name":"onOrientationChange","tagname":"event","owner":"UI.Page","id":"event-onOrientationChange","meta":{"android":true,"ios":true}},{"name":"onPageCreate","tagname":"event","owner":"UI.TabBarController","id":"event-onPageCreate","meta":{"android":true,"ios":true}},{"name":"onSafeAreaPaddingChange","tagname":"event","owner":"UI.Page","id":"event-onSafeAreaPaddingChange","meta":{"ios":true}},{"name":"onSelected","tagname":"event","owner":"UI.TabBarController","id":"event-onSelected","meta":{"android":true,"ios":true}},{"name":"onShow","tagname":"event","owner":"UI.Page","id":"event-onShow","meta":{"android":true,"ios":true}}],"alternateClassNames":[],"aliases":{},"id":"class-UI.TabBarController","short_doc":"This class extends from Page. ...","component":false,"superclasses":["UI.Page"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/UI.Page' rel='UI.Page' class='docClass'>UI.Page</a><div class='subclass '><strong>UI.TabBarController</strong></div></div></pre><div class='doc-contents'><p>This class extends from <a href=\"#!/api/UI.Page\" rel=\"UI.Page\" class=\"docClass\">Page</a>. But you shouldn't use directly layout of the <a href=\"#!/api/UI.TabBarController\" rel=\"UI.TabBarController\" class=\"docClass\">TabBarController</a>.</p>\n\n<pre class='inline-example '><code>const extend = require(\"js-base/core/extend\");\nconst TabBarController = require('sf-core/ui/tabbarcontroller');\nconst Color = require('sf-core/ui/color');\nconst TabBarItem = require('sf-core/ui/tabbaritem');\nconst Page = require('sf-core/ui/page');\n\nconst backgroundColors = [Color.RED, Color.YELLOW, Color.BLUE, Color.GREEN, Color.MAGENTA];\nconst SamplePage = extend(Page)(\n    function(_super, params) {\n        _super(this, params);\n    }\n);\n\nvar TabBarController1 = extend(TabBarController)(\n    function(_super, params) {\n        _super(this, {\n            items: createTabBarItems(5)\n        });\n\n        var pages = [];\n        this.onPageCreate = function(index) {\n            if (!pages[index]) {\n                pages[index] = new SamplePage({ index: index });\n                pages[index].layout.backgroundColor = backgroundColors[index];\n            }\n            return pages[index];\n        };\n\n        this.onShow = function() {\n            this.headerBar.visible = false;\n        }.bind(this);\n\n        this.onLoad = function() {\n            this.scrollEnabled = true;\n            this.indicatorColor = Color.BLACK;\n            this.indicatorHeight = 5;\n            this.barColor = Color.LIGHTGRAY;\n            this.iconColor = {\n                normal: Color.BLACK,\n                selected: Color.BLUE\n            };\n            this.textColor = {\n                normal: Color.BLACK,\n                selected: Color.BLUE\n            };\n        }.bind(this);\n\n        this.onSelected = function(index) {\n            <a href=\"#!/api/console-static-method-log\" rel=\"console-static-method-log\" class=\"docClass\">console.log</a>(\"Selected item index: \" + index);\n        };\n    }\n);\n\nfunction createTabBarItems(itemCount) {\n    var items = [];\n    for (var i = 0; i &lt; itemCount; i++) {\n        items.push(new TabBarItem({\n            title: \"Category \" + i\n        }));\n    }\n    return items;\n}\n</code></pre>\n        <p>Available since: <b>3.2.0</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-autoCapitalize' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.TabBarController'>UI.TabBarController</span><br/></div><a href='#!/api/UI.TabBarController-property-autoCapitalize' class='name expandable'>autoCapitalize</a> : Boolean<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets/sets the auto capitalize title of the items of TabBarController. ...</div><div class='long'><p>Gets/sets the auto capitalize title of the items of TabBarController.</p>\n<p>Defaults to: <code>true</code></p>        <p>Available since: <b>3.2.1</b></p>\n</div></div></div><div id='property-barColor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.TabBarController'>UI.TabBarController</span><br/></div><a href='#!/api/UI.TabBarController-property-barColor' class='name expandable'>barColor</a> : <a href=\"#!/api/UI.Color\" rel=\"UI.Color\" class=\"docClass\">UI.Color</a><span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets/sets bar color of tabs. ...</div><div class='long'><p>Gets/sets bar color of tabs.</p>\n<p>Defaults to: <code>Color.WHITE</code></p>        <p>Available since: <b>3.2.0</b></p>\n</div></div></div><div id='property-barHeight' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.TabBarController'>UI.TabBarController</span><br/></div><a href='#!/api/UI.TabBarController-property-barHeight' class='name expandable'>barHeight</a> : Number<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets the tab bar height of the TabBarController. ...</div><div class='long'><p>Gets the tab bar height of the TabBarController. You can change barHeight on Android, but not iOS.\nThis property is read-only for iOS.</p>\n        <p>Available since: <b>3.2.0</b></p>\n</div></div></div><div id='property-dividerColor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.TabBarController'>UI.TabBarController</span><br/></div><a href='#!/api/UI.TabBarController-property-dividerColor' class='name expandable'>dividerColor</a> : <a href=\"#!/api/UI.Color\" rel=\"UI.Color\" class=\"docClass\">UI.Color</a><span class=\"signature\"><span class='android' >android</span></span></div><div class='description'><div class='short'>Gets/sets the divider color of the TabBarController. ...</div><div class='long'><p>Gets/sets the divider color of the TabBarController.</p>\n<p>Defaults to: <code>UI.Color.BLACK</code></p>        <p>Available since: <b>3.2.0</b></p>\n</div></div></div><div id='property-dividerPadding' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.TabBarController'>UI.TabBarController</span><br/></div><a href='#!/api/UI.TabBarController-property-dividerPadding' class='name expandable'>dividerPadding</a> : Number<span class=\"signature\"><span class='android' >android</span></span></div><div class='description'><div class='short'>Gets/sets the divider padding of the TabBarController. ...</div><div class='long'><p>Gets/sets the divider padding of the TabBarController.</p>\n<p>Defaults to: <code>0</code></p>        <p>Available since: <b>3.2.0</b></p>\n</div></div></div><div id='property-dividerWidth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.TabBarController'>UI.TabBarController</span><br/></div><a href='#!/api/UI.TabBarController-property-dividerWidth' class='name expandable'>dividerWidth</a> : Number<span class=\"signature\"><span class='android' >android</span></span></div><div class='description'><div class='short'>Gets/sets the divider width of the TabBarController. ...</div><div class='long'><p>Gets/sets the divider width of the TabBarController.</p>\n<p>Defaults to: <code>0</code></p>        <p>Available since: <b>3.2.0</b></p>\n</div></div></div><div id='property-headerBar' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/UI.Page' rel='UI.Page' class='defined-in docClass'>UI.Page</a><br/></div><a href='#!/api/UI.Page-property-headerBar' class='name expandable'>headerBar</a> : <a href=\"#!/api/UI.HeaderBar\" rel=\"UI.HeaderBar\" class=\"docClass\">UI.HeaderBar</a><span class=\"signature\"><span class='readonly' >readonly</span><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets header bar object of a  page. ...</div><div class='long'><p>Gets header bar object of a  page. This property is readonly, you can not\nset header bar to a page but you can change properties of page's header bar.\nIn Android, header bar properties should be implemented in onLoad or onShow of page.\nOtherwise given settings might be losed.</p>\n        <p>Available since: <b>0.1</b></p>\n</div></div></div><div id='property-indicatorColor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.TabBarController'>UI.TabBarController</span><br/></div><a href='#!/api/UI.TabBarController-property-indicatorColor' class='name expandable'>indicatorColor</a> : <a href=\"#!/api/UI.Color\" rel=\"UI.Color\" class=\"docClass\">UI.Color</a><span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets/sets the indicator color of the TabBarController. ...</div><div class='long'><p>Gets/sets the indicator color of the TabBarController.</p>\n<p>Defaults to: <code>UI.Color.create(&quot;#00A1F1&quot;)</code></p>        <p>Available since: <b>3.2.0</b></p>\n</div></div></div><div id='property-indicatorHeight' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.TabBarController'>UI.TabBarController</span><br/></div><a href='#!/api/UI.TabBarController-property-indicatorHeight' class='name expandable'>indicatorHeight</a> : Number<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'><p>Gets/sets the indicator height of the TabBarController.</p>\n</div><div class='long'><p>Gets/sets the indicator height of the TabBarController.</p>\n        <p>Available since: <b>3.2.0</b></p>\n</div></div></div><div id='property-items' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.TabBarController'>UI.TabBarController</span><br/></div><a href='#!/api/UI.TabBarController-property-items' class='name expandable'>items</a> : <a href=\"#!/api/UI.TabBarItem\" rel=\"UI.TabBarItem\" class=\"docClass\">UI.TabBarItem</a>[]<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets/sets the tab bar item array of the TabBarController. ...</div><div class='long'><p>Gets/sets the tab bar item array of the TabBarController.</p>\n<p>Defaults to: <code>[]</code></p>        <p>Available since: <b>3.2.0</b></p>\n</div></div></div><div id='property-layout' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/UI.Page' rel='UI.Page' class='defined-in docClass'>UI.Page</a><br/></div><a href='#!/api/UI.Page-property-layout' class='name expandable'>layout</a> : <a href=\"#!/api/UI.FlexLayout\" rel=\"UI.FlexLayout\" class=\"docClass\">UI.FlexLayout</a><span class=\"signature\"><span class='readonly' >readonly</span><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets the main layout of Page which is an instance of UI.FlexLayout. ...</div><div class='long'><p>Gets the main layout of Page which is an instance of <a href=\"#!/api/UI.FlexLayout\" rel=\"UI.FlexLayout\" class=\"docClass\">UI.FlexLayout</a>. You\nshould add views to the layout of the page.</p>\n        <p>Available since: <b>0.1</b></p>\n</div></div></div><div id='property-orientation' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/UI.Page' rel='UI.Page' class='defined-in docClass'>UI.Page</a><br/></div><a href='#!/api/UI.Page-property-orientation' class='name expandable'>orientation</a> : <a href=\"#!/api/UI.Page.Orientation\" rel=\"UI.Page.Orientation\" class=\"docClass\">UI.Page.Orientation</a><span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets/sets the orientation of the Page. ...</div><div class='long'><p>Gets/sets the orientation of the Page. This property must be set as constructor parameter.\n<a href=\"#!/api/UI.Page.Orientation\" rel=\"UI.Page.Orientation\" class=\"docClass\">Orientation</a> constants can use with bitwise or operator. The default value of the\norientation defined in project.json.</p>\n\n<pre class='inline-example '><code>const Page = require('sf-core/ui/page');\nvar myPage1 = new Page({\n     orientation: Page.Orientation.LANDSCAPELEFT\n});\n</code></pre>\n<p>Defaults to: <code>UI.Page.Orientation.PORTRAIT</code></p>        <p>Available since: <b>0.1</b></p>\n</div></div></div><div id='property-overScrollMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.TabBarController'>UI.TabBarController</span><br/></div><a href='#!/api/UI.TabBarController-property-overScrollMode' class='name expandable'>overScrollMode</a> : <a href=\"#!/api/UI.Android.OverScrollMode\" rel=\"UI.Android.OverScrollMode\" class=\"docClass\">UI.Android.OverScrollMode</a><span class=\"signature\"><span class='android' >android</span></span></div><div class='description'><div class='short'>Gets/sets over-scroll mode for top tab bar. ...</div><div class='long'><p>Gets/sets over-scroll mode for top tab bar.</p>\n<p>Defaults to: <code>UI.Android.OverScrollMode.ALWAYS</code></p>        <p>Available since: <b>3.2.0</b></p>\n</div></div></div><div id='property-safeAreaLayoutMode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/UI.Page' rel='UI.Page' class='defined-in docClass'>UI.Page</a><br/></div><a href='#!/api/UI.Page-property-safeAreaLayoutMode' class='name expandable'>safeAreaLayoutMode</a> : Boolean<span class=\"signature\"><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Sets padding values to page's layout. ...</div><div class='long'><p>Sets padding values to page's layout.\nThis will override padding values of its layout. Padding values are defined by Apple for each orientation.</p>\n<p>Defaults to: <code>false</code></p>        <p>Available since: <b>0.1</b></p>\n</div></div></div><div id='property-scrollEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.TabBarController'>UI.TabBarController</span><br/></div><a href='#!/api/UI.TabBarController-property-scrollEnabled' class='name expandable'>scrollEnabled</a> : Boolean<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets/sets whether to enable scrollable tabs. ...</div><div class='long'><p>Gets/sets whether to enable scrollable tabs.</p>\n<p>Defaults to: <code>false</code></p>        <p>Available since: <b>3.2.0</b></p>\n</div></div></div><div id='property-selectedIndex' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.TabBarController'>UI.TabBarController</span><br/></div><a href='#!/api/UI.TabBarController-property-selectedIndex' class='name expandable'>selectedIndex</a> : Number<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'><p>Gets the selected index of TabBarController.</p>\n</div><div class='long'><p>Gets the selected index of TabBarController.</p>\n        <p>Available since: <b>3.2.0</b></p>\n</div></div></div><div id='property-statusBar' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/UI.Page' rel='UI.Page' class='defined-in docClass'>UI.Page</a><br/></div><a href='#!/api/UI.Page-property-statusBar' class='name expandable'>statusBar</a> : <a href=\"#!/api/UI.StatusBar\" rel=\"UI.StatusBar\" class=\"docClass\">UI.StatusBar</a><span class=\"signature\"><span class='readonly' >readonly</span><span class='removed' >removed</span><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets status bar object. ...</div><div class='long'><p>Gets status bar object. This property is readonly, you can not set\nstatus bar to a page but you can change properties of page's status bar.</p>\n        <p>Available since: <b>0.1</b></p>\n        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This property has been <strong>removed</strong> since 4.0.0</p>\n        <p>Use Application.statusBar instead</p>\n\n        </div>\n</div></div></div><div id='property-textColor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.TabBarController'>UI.TabBarController</span><br/></div><a href='#!/api/UI.TabBarController-property-textColor' class='name expandable'>textColor</a> : <a href=\"#!/api/UI.Color\" rel=\"UI.Color\" class=\"docClass\">UI.Color</a>|Object<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets/sets the text color of the tabs. ...</div><div class='long'><p>Gets/sets the text color of the tabs. You can specify text colors for the different states (normal, selected) used for the tabs.</p>\n        <p>Available since: <b>3.2.0</b></p>\n</div></div></div><div id='property-transitionViews' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/UI.Page' rel='UI.Page' class='defined-in docClass'>UI.Page</a><br/></div><a href='#!/api/UI.Page-property-transitionViews' class='name expandable'>transitionViews</a> : <a href=\"#!/api/UI.View\" rel=\"UI.View\" class=\"docClass\">UI.View</a>[]<span class=\"signature\"><span class='readonly' >readonly</span><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Gets/sets custom transition views. ...</div><div class='long'><p>Gets/sets custom transition views. Used with custom transitions to map a <a href=\"#!/api/UI.View\" rel=\"UI.View\" class=\"docClass\">View</a>\nfrom a removed or hidden <a href=\"#!/api/UI.Page\" rel=\"UI.Page\" class=\"docClass\">Page</a> to a <a href=\"#!/api/UI.View\" rel=\"UI.View\" class=\"docClass\">View</a> from a shown or added <a href=\"#!/api/UI.Page\" rel=\"UI.Page\" class=\"docClass\">Page</a>.</p>\n\n<pre class='inline-example '><code>const Page = require('sf-core/ui/page');\nvar myPage = new Page({\n    var page = this;\n    onShow: function() {\n        page.headerBar.visible = true;\n\n        page.imageView1.transitionID = \"view1\";\n        page.imageView2.transitionID = \"view2\";\n\n        page.transitionViews = [page.imageView1, page.imageView2];\n    }\n});\n\nvar myDetailPage = new Page({\n    var page = this;\n    onShow: function() {\n        page.headerBar.visible = true;\n    }\n\n    page.imageView1.transitionID = \"view2\";\n    page.imageView2.transitionID = \"view1\";\n});\n</code></pre>\n        <p>Available since: <b>3.2.0</b></p>\n</div></div></div><div id='property-transitionViewsCallback' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/UI.Page' rel='UI.Page' class='defined-in docClass'>UI.Page</a><br/></div><a href='#!/api/UI.Page-property-transitionViewsCallback' class='name expandable'>transitionViewsCallback</a> : Object<span class=\"signature\"><span class='android' >android</span></span></div><div class='description'><div class='short'>Adds a callback to transition views which will be triggered through the life  of an animation such as start and end. ...</div><div class='long'><p>Adds a callback to transition views which will be triggered through the life  of an animation such as start and end. This callback must be assigned in constructor.</p>\n        <p>Available since: <b>4.0.7</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>transitionViewsCallback</span> : Object<div class='sub-desc'>\n<ul><li><span class='pre'>onTransitionStart</span> : Function<div class='sub-desc'>\n</div></li><li><span class='pre'>onTransitionEnd</span> : Function<div class='sub-desc'>\n</div></li></ul></div></li></ul></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-dismiss' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/UI.Page' rel='UI.Page' class='defined-in docClass'>UI.Page</a><br/></div><a href='#!/api/UI.Page-method-dismiss' class='name expandable'>dismiss</a>( <span class='pre'>params</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>This function dismiss presently shown pop-up page. ...</div><div class='long'><p>This function dismiss presently shown pop-up page.</p>\n        <p>Available since: <b>3.1.1</b></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprected</strong> </p>\n        \n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>params</span> : Object<div class='sub-desc'>\n<ul><li><span class='pre'>onComplete</span> : Function<div class='sub-desc'>\n</div></li></ul></div></li></ul></div></div></div><div id='method-present' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/UI.Page' rel='UI.Page' class='defined-in docClass'>UI.Page</a><br/></div><a href='#!/api/UI.Page-method-present' class='name expandable'>present</a>( <span class='pre'>params</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>This function shows up the pop-up page. ...</div><div class='long'><p>This function shows up the pop-up page. Pop-up pages behave exactly as <a href=\"#!/api/UI.Page\" rel=\"UI.Page\" class=\"docClass\">UI.Page</a> .</p>\n\n<pre class='inline-example '><code>const self = this; //Current page \nconst Color = require('sf-core/ui/color');\n\nvar popuPage = new Page();\npopuPage.layout.backgroundColor = Color.BLUE;\n\nconst Button = require('sf-core/ui/button');\nvar myButton = new Button({\nwidth: 150,\nheight: 80,\ntext: \"Smartface Button\",\nonPress: function() {\n self.dismiss(function() {\n <a href=\"#!/api/console-static-method-log\" rel=\"console-static-method-log\" class=\"docClass\">console.log</a>(\"dismiss\")\n });\n}\n});\npopuPage.layout.addChild(myButton);\n\nself.popupBtn.onPress = function() {\n    self.present({ \n        controller: popuPage, \n        animated: true, \n        onComplete: function() { \n            <a href=\"#!/api/console-static-method-log\" rel=\"console-static-method-log\" class=\"docClass\">console.log</a>(\"Page3 presented...\");\n        }; \n    });\n}\n</code></pre>\n        <p>Available since: <b>3.1.1</b></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprected</strong> </p>\n        \n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>params</span> : Object<div class='sub-desc'>\n<ul><li><span class='pre'>controller</span> : <a href=\"#!/api/UI.Page\" rel=\"UI.Page\" class=\"docClass\">UI.Page</a>|<a href=\"#!/api/UI.NavigationController\" rel=\"UI.NavigationController\" class=\"docClass\">UI.NavigationController</a><div class='sub-desc'>\n</div></li><li><span class='pre'>animated</span> : Boolean<div class='sub-desc'>\n</div></li><li><span class='pre'>onComplete</span> : Function<div class='sub-desc'>\n</div></li></ul></div></li></ul></div></div></div><div id='method-setSelectedIndex' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.TabBarController'>UI.TabBarController</span><br/></div><a href='#!/api/UI.TabBarController-method-setSelectedIndex' class='name expandable'>setSelectedIndex</a>( <span class='pre'>index, [animated]</span> )<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>Sets the selected index of TabBarController. ...</div><div class='long'><p>Sets the selected index of TabBarController.</p>\n        <p>Available since: <b>3.2.0</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>animated</span> : Boolean (optional)<div class='sub-desc'>\n<p>Defaults to: <code>true</code></p></div></li></ul></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-event'>Events</h3><div class='subsection'><div id='event-onBackButtonPressed' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/UI.Page' rel='UI.Page' class='defined-in docClass'>UI.Page</a><br/></div><a href='#!/api/UI.Page-event-onBackButtonPressed' class='name expandable'>onBackButtonPressed</a>( <span class='pre'></span> )<span class=\"signature\"><span class='android' >android</span></span></div><div class='description'><div class='short'>This event will be triggered when user clicks back button on the Device. ...</div><div class='long'><p>This event will be triggered when user clicks back button on the Device.</p>\n        <p>Available since: <b>0.1</b></p>\n</div></div></div><div id='event-onHide' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/UI.Page' rel='UI.Page' class='defined-in docClass'>UI.Page</a><br/></div><a href='#!/api/UI.Page-event-onHide' class='name expandable'>onHide</a>( <span class='pre'></span> )<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>This event is called when a page disappears from the screen. ...</div><div class='long'><p>This event is called when a page disappears from the screen.</p>\n</div></div></div><div id='event-onLoad' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/UI.Page' rel='UI.Page' class='defined-in docClass'>UI.Page</a><br/></div><a href='#!/api/UI.Page-event-onLoad' class='name expandable'>onLoad</a>( <span class='pre'></span> )<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>This event is called once when page is created. ...</div><div class='long'><p>This event is called once when page is created.\nYou can create views and add them to page in this callback.</p>\n</div></div></div><div id='event-onOrientationChange' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/UI.Page' rel='UI.Page' class='defined-in docClass'>UI.Page</a><br/></div><a href='#!/api/UI.Page-event-onOrientationChange' class='name expandable'>onOrientationChange</a>( <span class='pre'>e</span> )<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>This event will be called when orientation of the Page changes. ...</div><div class='long'><p>This event will be called when orientation of the Page changes.\niOS fires this event before orientation changed but Android fires after changed.</p>\n        <p>Available since: <b>0.1</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>e</span> : Object<div class='sub-desc'>\n<ul><li><span class='pre'>orientation</span> : <a href=\"#!/api/UI.Page.Orientation\" rel=\"UI.Page.Orientation\" class=\"docClass\">UI.Page.Orientation</a><div class='sub-desc'>\n</div></li></ul></div></li></ul></div></div></div><div id='event-onPageCreate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.TabBarController'>UI.TabBarController</span><br/></div><a href='#!/api/UI.TabBarController-event-onPageCreate' class='name expandable'>onPageCreate</a>( <span class='pre'>index</span> )<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>This event called when a tab is chosen by the user. ...</div><div class='long'><p>This event called when a tab is chosen by the user.\nReturns an <a href=\"#!/api/UI.Page\" rel=\"UI.Page\" class=\"docClass\">Page</a> instance based on index.</p>\n        <p>Available since: <b>3.2.0</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p><a href=\"#!/api/UI.Page\" rel=\"UI.Page\" class=\"docClass\">UI.Page</a></p>\n</div></li></ul></div></div></div><div id='event-onSafeAreaPaddingChange' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/UI.Page' rel='UI.Page' class='defined-in docClass'>UI.Page</a><br/></div><a href='#!/api/UI.Page-event-onSafeAreaPaddingChange' class='name expandable'>onSafeAreaPaddingChange</a>( <span class='pre'>paddingObject</span> )<span class=\"signature\"><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>This event will be triggered when padding values of layout changed. ...</div><div class='long'><p>This event will be triggered when padding values of layout changed.</p>\n        <p>Available since: <b>0.1</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>paddingObject</span> : Object<div class='sub-desc'><p>Includes top,left,right and bottom padding values.</p>\n</div></li></ul></div></div></div><div id='event-onSelected' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='UI.TabBarController'>UI.TabBarController</span><br/></div><a href='#!/api/UI.TabBarController-event-onSelected' class='name expandable'>onSelected</a>( <span class='pre'>index</span> )<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>This event called when a tab is chosen by the user. ...</div><div class='long'><p>This event called when a tab is chosen by the user.</p>\n        <p>Available since: <b>3.2.0</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='event-onShow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/UI.Page' rel='UI.Page' class='defined-in docClass'>UI.Page</a><br/></div><a href='#!/api/UI.Page-event-onShow' class='name expandable'>onShow</a>( <span class='pre'>parameters</span> )<span class=\"signature\"><span class='android' >android</span><span class='ios' >iOS</span></span></div><div class='description'><div class='short'>This event is called when a page appears on the screen (everytime). ...</div><div class='long'><p>This event is called when a page appears on the screen (everytime).\nIt will be better to set headerBar and statusBar properties in this callback.</p>\n\n<pre class='inline-example '><code>const Page = require('sf-core/ui/page');\nconst Application = require('sf-core/application');\nvar myPage = new Page({\n    onShow: function() {\n        this.headerBar.visible = true;\n    }\n    Application.statusBar.visible = true;\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameters</span> : Object<div class='sub-desc'><p>Parameters passed from Router.go function</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});